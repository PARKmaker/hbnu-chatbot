{
  "version": "KorQuAD_v1.0_dev",
  "data": [
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "서버에 쓸데 없는 부하",
                  "answer_start": 95
                }
              ],
              "id": "1-4",
              "question": "매번의 request마다 페이지를 새로 로드한다면?"
            },
            {
              "answers": [
                {
                  "text": "대부분 실시간이 아니다.",
                  "answer_start": 339
                }
              ],
              "id": "1-8",
              "question": "웹에서 운용되는 실시간 서비스들은 실시간인가?"
            }
          ],
          "context": "웹 클라이언트에서 정보를 주고받는 방식은 여러가지가 있지만, 그중에서도 실시간 웹 통신은 매우 까다롭게 구성되어 있다. 단순히 서버에 request만 계속 보내게 된다면 서버에 쓸데 없는 부하도 많이 생길 것이고 만약에 매번의 request마다 페이지를 새로 로드해야 한다면 서버에서는 페이지 정보를 매번 클라이언트로 보내야하는 불상사가 발생할 수 있다. 웹은 태생 자체부터 실시간을 위해 필수적인 지속되는 연결(persistence connection)을 가질 수 없다. 클라이언트에서 서버에 접속하면 응답하고 연결이 끊어진다.(HTTP의 특징) 때문에 안타깝게도 현재 웹에서 운용되는 실시간 서비스들은 대부분 실시간이 아니다."
        },
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "연결이 유지되지 않는다.",
                  "answer_start": 176
                }
              ],
              "id": "1-13",
              "question": "일반적인 소켓들은 웹상의 HTTP에서는 연결이 유지되는가?"
            },
            {
              "answers": [
                {
                  "text": "Polling이다",
                  "answer_start": 326
                }
              ],
              "id": "1-17",
              "question": "서버가 임의로 데이터를 클라이언트에 보내기 위해서는?"
            },
            {
              "answers": [
                {
                  "text": "빈 응답을 하고",
                  "answer_start": 326
                }
              ],
              "id": "1-19",
              "question": "서버에 특정 event가 발생하지 않은 경우?"
            }
          ],
          "context": "폴링(polling)이란 하나의 장치(또는 프로그램)가 충돌 회피 또는 동기화 처리 등을 목적으로 다른 장치(또는 프로그램)의 상태를 주기적으로 검사하여 일정한 조건을 만족할 때 송수신 등의 자료처리를 하는 방식을 말한다. 일반적인 소켓들은 그 연결이 close를 호출되기 전까지 유지되지만 웹 상의 HTTP에서는 연결이 유지되지 않는다. 이로 인해 서버에서 클라이언트로 데이터를 보내고 싶을 경우 클라이언트의 요청을 기다려야 하는 문제가 생긴다. 즉, 서버가 임의로 데이터를 클라이언트에 보낼 수 없는 것이다. 이를 해결하기 위해 Server Push의 효과를 낼 수 있는 방식이 Polling이다. Polling은 클라이언트 입장에서 서버에 주기적으로 Request를 보내는 것이다. 예를 들어, 클라이언트는 주기적으로 서버에 요청을 보낸다. 그리고 서버에 특정 event가 발생하지 않은 경우에는 빈 응답을 하고 특정 Event가 발생했다면 그 직후에 들어오는 요청에 데이터를 담아보내는 것이다. Long Polling은 클라이언트가 요청을 보냈을 때 그 요청에 대한 연결을 서버가 Event 발생할 때까지 가지고 있는 것이다. 즉 응답을 지연시키는 것.(혹은 timeout되면 응답을 보내고 연결을 종료한다.) Long Polling은 서버입장에서 클라이언트의 요청을 가지고 있다가 특정 Event가 발생하면 그제야 응답을 보내는 것으로 이해할 수 있다."
        },
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "웹 소켓 핸드셰이크 요청을 브라우저의 HTTP 연결에서 서버로 전송하여 연결을 업그레이드함으로써 시작됩니다.",
                  "answer_start": 156
                }
              ],
              "id": "1-29",
              "question": "웹 소켓 연결 어떻게 시작되는가?"
            },
            {
              "answers": [
                {
                  "text": "64비트 Sec-WebSocket-Key 헤더가 포함됩니다.",
                  "answer_start": 244
                }
              ],
              "id": "1-30",
              "question": "업그레이드 요청 헤더와 함께 핸드셰이크 요청에는 어떤 것이 포함되는가?"
            },
            {
              "answers": [
                {
                  "text": "이진이며 HTTP 프로토콜을 준수하지 않습니다.",
                  "answer_start": 382
                }
              ],
              "id": "1-33",
              "question": "이 시점부터 연결은 어떤 특성이 있나요?"
            },
            {
              "answers": [
                {
                  "text": "클라이언트-서버 간 커넥션을 유지하기 때문에 이벤트를 주고받을 때",
                  "answer_start": 640
                }
              ],
              "id": "1-37",
              "question": "웹 소켓은 어떤 때에 실시간성을 보장할 수 있나요?"
            }
          ],
          "context": "웹 소켓은 클라이언트와 서버 간에 연결을 지속시키는 것이다. 웹 소켓은 하나의 TCP connection위에서 전이중 통신 채널을 제공한다. 웹소켓(WebSocket)은 사용자의 웹 브라우저에서 서버로 영구 양방향, 전이중 TCP 연결을 위한 통신 프로토콜이다. 웹 소켓 연결은 웹 소켓 핸드셰이크 요청을 브라우저의 HTTP 연결에서 서버로 전송하여 연결을 업그레이드함으로써 시작됩니다. 업그레이드 요청 헤더와 함께 핸드셰이크 요청에는 64비트 Sec-WebSocket-Key 헤더가 포함됩니다. 서버는 Sec-Websocket-Auth 헤더에서 키의 해시로 응답합니다. 이 헤더 교환은 캐싱 프록시가 이전 WebSocket 교환을 다시 보내지 못하도록 합니다. 이 시점부터 연결은 이진이며 HTTP 프로토콜을 준수하지 않습니다. 서버 응용 프로그램은 모든 웹 소켓 연결을 인식하고 각 연결과 개별적으로 통신할 수 있습니다. 웹 소켓이 열린 상태로 유지되므로 서버 또는 사용자는 서버 중 하나가 세션을 닫을 때까지 언제든지 메시지를 보낼 수 있습니다. 통신은 어느 한쪽 끝에서 시작될 수 있으며, 이것은 이벤트 중심의 웹 프로그래밍을 가능하게 한다. 반면 표준 HTTP는 사용자만 새 데이터를 요청할 수 있도록 허용합니다. 정리하면 웹 소켓은 클라이언트-서버 간 커넥션을 유지하기 때문에 이벤트를 주고받을 때 실시간성을 보장할 수 있습니다. 하지만 대용량 트래픽에서는 서버가 클라이언트 수만큼의 연결을 유지해야 한다는 부담이 있습니다."
        }
      ],
      "title": "웹"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "객체 기반의 스크립트 프로그래밍 언어이다.",
                  "answer_start": 9
                }
              ],
              "id": "2-1",
              "question": "자바스크립트란?"
            },
            {
              "answers": [
                {
                  "text": "ECMA스크립트의 표준 사양을 가장 잘 구현한 언어로 인정",
                  "answer_start": 349
                }
              ],
              "id": "2-7",
              "question": "자바스크립트는 어떤 표준 사양을 가장 잘 구현 했는가?"
            },
            {
              "answers": [
                {
                  "text": "브라우저 호환성을 위해 트랜스파일러로 컴파일된다.",
                  "answer_start": 441
                }
              ],
              "id": "2-8",
              "question": "ECMA스크립트는 어떤 것으로 컴파일 되는가?"
            }
          ],
          "context": "자바스크립트 : 객체 기반의 스크립트 프로그래밍 언어이다. 자바스크립트는 웹 브라우저 내에서 주로 사용되며, 다른 응용 프로그램의 내장 객체에도 접근할 수 있는 기능을 가지고 있다. Node.js와 같은 런타임 환경과 같이 서버 프로그래밍에도 사용되고 있다. 자바스크립트의 이름의 유래 : 본래 넷스케이프 커뮤니케이션즈 코퍼레이션의 브렌던아이크가 처음에는 모카라는 이름으로, 나중에는 라이브스크립트라는 이름으로 개발하였으며, 최종적으로 자바스크립트가 되었다. 자바스크립트와 자바의 차이점 : 이는 사실 두 언어 모두 C언어의 기본 구문에 바탕을 뒀기 때문이고, 자바와 자바스크립트는 직접적인 연관성은 약하다. 자바스크립트는 ECMA스크립트의 표준 사양을 가장 잘 구현한 언어로 인정받고 있으며 ECMA스크립트5까지는 대부분의 브라우저에서 기본적으로 지원되었으나 ECMA스크립트 이후부터는 브라우저 호환성을 위해 트랜스파일러로 컴파일된다."
        }
      ],
      "title": "자바스크립트"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "수동적 공격과 능동적 공격으로 나눌 수 있다.",
                  "answer_start": 128
                }
              ],
              "id": "3-2",
              "question": "송신자와 수신자의 전송에서 공격하는 종류는?"
            },
            {
              "answers": [
                {
                  "text": "수동적 공격과 능동적 공격으로 분류될 수 있으며",
                  "answer_start": 324
                }
              ],
              "id": "3-6",
              "question": "공격 어떻게 분류되는가?"
            },
            {
              "answers": [
                {
                  "text": "전수공격, 중간자 공격 등이 있다.",
                  "answer_start": 363
                }
              ],
              "id": "3-7",
              "question": "현대 정보보호에서는 어떤 공격이 있는가?"
            }
          ],
          "context": "정보보호 : 우연 또는 의도적으로 허가받지 않은 정보의 노출, 전송, 수정, 변조, 파괴 등으로 부터의 보호하는것이다. 정보보호의 기능 : 기술적, 관리적(관리적, 운영적). 송신자와 수신자의 전송에서 공격하는 종류에 대하여서는 수동적 공격과 능동적 공격으로 나눌 수 있다. 또한 보안에 대한 공격으로 데이터(메세지)에 대한 변조(modification), 삽입(insertion), 삭제(deletion), 재생(replay) 등으로 여러 형태로 나타난다. 소극적 공격 : Interception. 적극적 공격 : 신분위장, 재전송, 메시지 수정, 서비스 거부가 있다. 공격은 수동적 공격과 능동적 공격으로 분류될 수 있으며, 현대 정보보호에서는 전수공격, 중간자 공격 등이 있다. 정보보호의 기본 목표로는 비밀성, 무결성, 가용성이 있다. 비밀성 : 정보는 소유자가 원하는대로 비밀이 유지되어야 한다. 무결성 : 정보의 원형대로 보존되어야 한다. 가용성 : 필요로 할 때 언제든지 사용가능하다."
        }
      ],
      "title": "정보보호"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "구글어시스턴트",
                  "answer_start": 43
                }
              ],
              "id": "4-1",
              "question": "구글의 인공지능 도우미와 소프트웨어의 기술은?"
            },
            {
              "answers": [
                {
                  "text": "광고",
                  "answer_start": 428
                }
              ],
              "id": "4-6",
              "question": "인공지능의 활용은?"
            },
            {
              "answers": [
                {
                  "text": "동영상을 추천",
                  "answer_start": 453
                }
              ],
              "id": "4-7",
              "question": "인공지능의 예시는?"
            }
          ],
          "context": "인공지능 도우미와 소프트웨어 공개 동향에서 각 기업의 기술의 종류는 구글의 ‘구글어시스턴트’, 마이크로소프트의 ‘코타나’, 애플의‘시리’, 페이스북의‘챗봇’, 아마존의‘알렉사’, 삼성전자의‘빅스비’ 등이 있다. 구글의‘구글어시스턴트(Google Assistant)’는 구글이 개발하여 2016년에 발표한 인공지능 비서시스템이다. 구글 어시스턴트는 사용자의 음성을 인식하여 질문을 파악함 음악재생, 예약, 일정조회, 메시지전송 등을 수행한다. 스마트폰에서 e-메일을읽고, 이용자의 동작을파악한다. 질문을 검색하여 이용자에게 알려주며, 양방향 대화가능하다. 인공지능 시장 전망은 세계 인공지능 소프트웨어 시장의 급속도로 성장한다. 2018년 95억달러에서 2025년에는 1, 186억달러로 성장했다. 자연어처리, 언어번역, 로봇자동화, 머신러닝등 포함한다. 인공지능은 광고에서 활용이 된다. 유튜브에서 인공지능이 동영상을 추천하는 예시가 있다."
        }
      ],
      "title": "인공지능빅데이터"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "대근육의 수축과 이완을 단위시간 안에 최대한 빨리 반복함으로써 가능한 신체를 멀리 이동시키는 능력",
                  "answer_start": 202
                }
              ],
              "id": "5-14",
              "question": "스피드란?"
            },
            {
              "answers": [
                {
                  "text": "혈중 필요 이상으로 많은 지질성분 물질이 존재하면서 혈관벽에 쌓여 염증과 심혈관계질환의 원인이 되는 상태를 말한다",
                  "answer_start": 276
                }
              ],
              "id": "5-17",
              "question": "고지혈증이란?"
            }
          ],
          "context": "건강관리의 개념은 건강을 지키기 위한 활동을 의미한다. 건강의 유지, 증진, 질병의 조기발견과 치료, 신속한 사회복귀를 목적한다. 민첩성은 동작의 빠른 이동이나 방향의 전환능력을 말한다. 신체를 짧은 시간 내에 가능한 한 빨리 이동하는 능력을 말한다. 순발력은 가능한 빠른 시간 내에 최대의 힘을 발휘하는 능력이다. 단위 시간 당 수행한 일의 양이다. 스피드는 대근육의 수축과 이완을 단위시간 안에 최대한 빨리 반복함으로써 가능한 신체를 멀리 이동시키는 능력을 의미이다. 고지혈증은 일반적으로 혈중 필요 이상으로 많은 지질성분 물질이 존재하면서 혈관벽에 쌓여 염증과 심혈관계질환의 원인이 되는 상태를 말한다. 혈액 내에서 지방을 각 세포에 운반해 주기 위해 필요한 지단백 대사의 이상이 원인이다. 뚜렷한 증상 없을 수도 있으며 최근 서구화된 식이 습관으로 증가율이 높아진다. 심혈관계 질환과 신경계 질환 등 심각한 합병증이 발생한다. 진단은 혈중 지질 및 지단백 측정과 심혈관계 위험인자 보유유무, 과거 병력 등을 통해 진단. 5년에 한번은 검사한다."
        }
      ],
      "title": "웰빙시대의 건강관리"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "미국 남부",
                  "answer_start": 136
                }
              ],
              "id": "6-23",
              "question": "블루스와 컨트리음악은 어디서 유래되었는가?"
            },
            {
              "answers": [
                {
                  "text": "블루스 노트라는 반음을 적극적으로 활용하고 12마디의 블루스를 반복 연주하면서 즉흥 연주하는 특징",
                  "answer_start": 236
                }
              ],
              "id": "6-28",
              "question": "블루스의 음악적인 특징?"
            },
            {
              "answers": [
                {
                  "text": "아름다운 자연환경을 찬양하고 고향을 그리워하며 거대한 운명에 순응하거나 개척하려는 카우보이의 느낌이 난다.",
                  "answer_start": 371
                }
              ],
              "id": "6-30",
              "question": "백인들은 어떤 느낌인가?"
            },
            {
              "answers": [
                {
                  "text": "음악",
                  "answer_start": 442
                }
              ],
              "id": "6-31",
              "question": "서부개척시대의 삶을 표현하는 방식은?"
            }
          ],
          "context": "미국의 대중 음악은 수십년간 엄청나게 다양한 갈래로 발전되었고 그 뿌리는 Black and White로 나눌 수 있다. 블루스로 대표되는 흑인들의 음악인 Black과 컨트리로 대표되는 백인들의 음악인 White를 뜻한다. 블루스와 컨트리음악은 미국 남부에서 유래되었다. 어쿠스틱 기타를 중심으로 연주한다는 공통점이 있지만 블루스는 극한의 노예 노동을 당하면서 목화밭을 일구었던 흑인들의 애환을 담은 음악이다. 음악적으로는 블루스 노트라는 반음을 적극적으로 활용하고 12마디의 블루스를 반복 연주하면서 즉흥 연주하는 특징이 있습니다. 반면 White의 컨트리 음악은 블루스와 접근이 다르다. 백인들은 유럽에서 넘어와 미국의 자연환경을 개척하며 문화를 일궈 나갔다. 아름다운 자연환경을 찬양하고 고향을 그리워하며 거대한 운명에 순응하거나 개척하려는 카우보이의 느낌이 난다. 서부개척시대의 삶을 음악으로 표현하는 방식이다. 음악적으로도 온음을 중심으로 온화하고 밝은 느낌이다."
        }
      ],
      "title": "미국문화의 이해"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "인터넷 상에 있는 리소스의 위치를 명확하게 식별하는 데 사용",
                  "answer_start": 73
                }
              ],
              "id": "7-33",
              "question": "URL이란?"
            }
          ],
          "context": "HTML은 URL로 표현되는 다른 문서에 대한 연결을 지정하는 방법을 제공하여 하이퍼텍스트 마크업언어라는 이름을 붙였다. URL은 인터넷 상에 있는 리소스의 위치를 명확하게 식별하는 데 사용되며 URL은 통합 리소스 식별자의 가장 널리 사용되는 종류중 하나다. URL 클래스는 자바 프로그램이 특정 위치로부터 데이터를 가져오는 가장 쉬운 방법을 제공한다. 당신은 이 클래스 내부에서 사용되는 프로토콜이나 서버와 통신하는 방법에 대한 자세하나 부분은 신경 쓰지 않아도 된다. 당신은 단지 이 URL클래스만 사용하면 여러분이 원하는 데이터를 쉽게 얻을 수 있다. HTTP는 웹 클라이언트가 서버와 대화하는 방법과 서버에서 다시 클라이언트로 데이터가 전송되는 방법을 정의한 표준이다.HTTP는 일반적으로 HTML 파일과 그 안에 포함된 이미지를 전송하는 수단쯤으로 생각되지만, HTTP는 데이터 형식을 가리지 않는다. 서버는 마지막 빈줄을 확인 하는 즉시, 동일한 연결을 통해 클라이언트에게 응답을 보내기 시작한다."
        }
      ],
      "title": "네트워크 프로그래밍"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "2016년 올림픽을 앞두고 러시아",
                  "answer_start": 63
                }
              ],
              "id": "8-42",
              "question": "국가주의의 예시는 무엇이 있나요?"
            }
          ],
          "context": "국가주의란 국가의 이익을 개인의 이익보다 절대적으로 우선시키는 사상원리나 정책을 말한다. 국가주의 사례의 예시는 2016년 올림픽을 앞두고 러시아가 정부 차원에서 선수들의 약물 복용을 조장하였고, 올림픽에서 러시아 팀으로의 출전을 못하고 독립선수의 자격으로 출전한 사례다. 이는 국가의 스포츠적 위신을 높이려 이익을 위해 개인에게 도핑을 권유하고 실시하는 등 개인보다는 국가의 이익을 중요시 생각하는 것에서 시작된다."
        }
      ],
      "title": "스포츠와 비판적사고"
    },
    {
      "paragraphs": [
        {
          "qas": [
            {
              "answers": [
                {
                  "text": "동시에 여러 프로그램을 메모리에 적재하고 CPU의 실행을 시분할 하여 각각의 프로세스에게 사용하게 하여 CPU의 이용률을 최대로 높인다",
                  "answer_start": 87
                }
              ],
              "id": "9-48",
              "question": "다중프로그래밍 운영체제의 기본요소는?"
            }
          ],
          "context": "다중프로그래밍 환경에서 성능을 높이기 위하여 프로세스에게 CPU를 효율적으로 할당하는 과정을 CPU 스케줄링이라고 한다. 다중프로그래밍 운영체제의 기본요소 동시에 여러 프로그램을 메모리에 적재하고 CPU의 실행을 시분할 하여 각각의 프로세스에게 사용하게 하여 CPU의 이용률을 최대로 높인다. 프로세서 스케줄링의 목표는 멀티프로그래밍의 환경에서 CPU의 이용률의 최대화 하기 위한다."
        }
      ],
      "title": "운영체제"
    }
  ]
}